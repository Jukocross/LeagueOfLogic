module booleanUnit (
    input a[16],
    input b[16],
    input alufn_signal[6],
    output out[16]
  ) {
  
  always {
    case(alufn_signal[3:0]){
      b1000: out = a & b; //AND
      b0111: out = ~(a & b); //NAND
      b1110: out = a | b; //OR
      b0001: out = ~(a | b); //NOR
      b0110: out = a ^ b; //XOR
      b1001: out = ~(a ^ b); //XNOR
      b1010: out = a; //A
      b0101: out = ~a; //~A
      b1100: out = b; //B
      b0011: out = ~b; //~B
      default:
        out = 32b0;
      }
  }
    
}
